" File              : .vimrc.custom.config
" Author            : Tristan <15997232823@163.com>
" Date              : Sun Jul 12 2020 14:10:26 PM CST
" Last Modified Date: Thu Jul 23 2020 23:53:29 PM CST
" Last Modified By  : Tristan <15997232823@163.com>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置，若要增加、卸载插件，请放入~/.vimrc.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 开启相对行号
" set relativenumber

" 开启鼠标
" set mouse=a

" 设置光标所在列高亮
" set cursorcolumn

" indentLine 开启代码对齐线
" let g:indentLine_enabled = 1

" markdown
" let system = system('uname -s')
" if system == "Darwin\n"
"     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
" else
"     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
" endif
" nmap <silent> <F7> <Plug>MarkdownPreview
" imap <silent> <F7> <Plug>MarkdownPreview
" nmap <silent> <F8> <Plug>StopMarkdownPreview
" imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"


let g:UltiSnipsExpandTrigger="<c-e>"
let g:UltiSnipsJumpForwardTrigger="<c-e>"
let g:UltiSnipsJumpBackwardTrigger="<c-b>"
let g:UltiSnipsEditSplit="vertical"

let g:UltiSnipsSnippetDirectories = [$HOME.'/.vim/plugged/Ultisnips/', 'UltiSnips']
"设置最后5行永远可见
set scrolloff=5
set relativenumber

"auto add the file header
let g:header_field_author = 'Tristan'
let g:header_field_author_email = '15997232823@163.com'
map <F4> :AddHeader<CR>

"auto load the markdown keys-map
source $HOME/.config/nvim/plugged/prepare-code/snippet/snippets.vim

let g:python3_host_prog='/usr/bin/python3'

"change the wiki to markdown
let g:vimwiki_list = [{'path': '~/vimwiki/',
            \ 'syntax': 'markdown', 'ext': '.md'}]

"add clang-format
let g:formatterpath=['/usr/bin/clang-format']
nnoremap \f :Autoformat<CR>
autocmd BufWritePre *.c,*.cpp,*.h,*.go :Autoformat
autocmd Filetype cpp inoremap ; ;<Esc>:Autoformat<CR><Esc>A
autocmd Filetype c inoremap ; ;<Esc>:Autoformat<CR><Esc>A
autocmd Filetype go inoremap <CR> <Esc>:Autoformat<CR><Esc>A<CR>
autocmd Filetype python inoremap <CR> <Esc>:Autoformat<CR><Esc>A<CR>

"change the window
nnoremap <m-tab> <c-w>w
" Compile function
noremap r :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec ":Autoformat"
    exec "w"
    if &filetype == 'c'
        exec "!g++ % -o %<"
        exec "!time ./%<"
    elseif &filetype == 'cpp'
        set splitbelow
        exec "!g++ -std=c++11 % -Wall -o %<"
        :sp
        ":res -15
        :term ./%<
    elseif &filetype == 'java'
        exec "!javac %"
        exec "!time java %<"
        "elseif &filetype == 'sh'
        ":!time bash %
    elseif &filetype == 'python'
        set splitbelow
        :sp
        :term python3 %
    elseif &filetype == 'html'
        silent! exec "!".g:mkdp_browser." % &"
    elseif &filetype == 'markdown'
        exec "MarkdownPreview"
    elseif &filetype == 'tex'
        silent! exec "VimtexStop"
        silent! exec "VimtexCompile"
    elseif &filetype == 'dart'
        exec "CocCommand flutter.run -d ".g:flutter_default_device
        CocCommand flutter.dev.openDevLog
    elseif &filetype == 'javascript'
        set splitbelow
        :sp
        :term export DEBUG="INFO,ERROR,WARNING"; node --trace-warnings .
    elseif &filetype == 'go'
        set splitbelow
        :sp
        :term go run .
    endif
endfunc

"FZF
noremap <leader>f :Files<CR>
noremap <leader>r :Rg<CR>
noremap <leader>h :History<CR>
noremap <leader><leader>h :History:<CR>

"vim-go
let g:go_echo_go_info = 0
let g:go_doc_popup_window = 1
let g:go_def_mapping_enabled = 0
let g:go_template_autocreate = 0
let g:go_textobj_enabled = 0
"let g:go_auto_type_info = 1
let g:go_def_mapping_enabled = 0
let g:go_highlight_array_whitespace_error = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_chan_whitespace_error = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_format_strings = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_function_parameters = 1
let g:go_highlight_functions = 1
let g:go_highlight_generate_tags = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_space_tab_error = 1
let g:go_highlight_string_spellcheck = 1
let g:go_highlight_structs = 1
let g:go_highlight_trailing_whitespace_error = 1
let g:go_highlight_types = 1
let g:go_highlight_variable_assignments = 0
let g:go_highlight_variable_declarations = 0
let g:go_doc_keywordprg_enabled = 0


"let g:go_highlight_structs           = 1
"let g:go_highlight_interfaces        = 1
"let g:go_highlight_types             = 1
"let g:go_highlight_fields            = 1
"let g:go_highlight_functions         = 1
"let g:go_highlight_function_calls    = 1
"let g:go_highlight_operators         = 1
"let g:go_highlight_extra_types       = 1
"let g:go_highlight_methods           = 1
"let g:go_highlight_build_constraints = 1
""
"disable warnings:"vim-go: initialized gopls"
let g:go_gopls_enabled = 0

"let g:go_template_autocreate = 0

